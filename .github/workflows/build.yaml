name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    - name: Install oras
      uses: oras-project/setup-oras@v1
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        pipx install poetry
    - name: Install dependencies
      run: |
        make install
    - name: Run tests
      run: |
        make test
    - name: Run mypy
      run: |
        make mypy
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.9'
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Install dependencies
        run: |
          make install
      - name: Run Ruff
        run: | 
          poetry run ruff check --config=pyproject.toml --output-format=github .
  check-code-sync:
    name: Check code is in sync
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.9"
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: make clean build lint
        run: |
          make clean build lint
      - name: Check if there are uncommitted file changes
        run: |
          clean=$(git status --porcelain)
          if [[ -z "$clean" ]]; then
              echo "Empty git status --porcelain: $clean"
          else
              echo "Uncommitted file changes detected: $clean"
              git diff
              exit 1
          fi
